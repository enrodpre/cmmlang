p params.next()
p params.next()
p params.next()
p params.next()
p *params.next()
p data
p types
p data
p data.ret
p *data.ret
p data.ret->string()
p data.arg1->string()
p data.arg2->string()
p types
p types.get(0)
bt
p unary.expr
p unary.expr.type()
p right_before
p loc
p loc
p err
p gen->ast
p gen->ast->active_scope()
p gen->ast->active_scope()->variables
n
n
c
p ident
n
p next
c
n
p next
finish
c
finish
c
bt
p unary
p unary.expr
p unary.expr.m_term
n
p c
p op
p builtin_operators.at(op)
p data
p arg1
p data.arg1
p *data.arg1
p data.arg1->string()
p data.arg2->string()
finish
r
p types
p (types.size() != 2 || data.arg2 != VOID_T || !data.arg2->match(*types.at(1)))
p types.size() != 2 || data.arg2 != VOID_T || !data.arg2->match(*types.at(1))
p types.size() != 2
p types
finish
p builtins
p types
p op
p overload
p types
p pair
n
p required
p required->string()
p actual->string()
p exact_match 
n
n
r
p types
p types.front()
p types.front()->string(0
p types.front()->string()
p cat
n
c
n
p is_lvalue
re
r
p is_lvalue
p is_arithmetic
c
info locals
info args
bt
p t
info args
p t
info args
bt
p t
s
n
info args
s
n
f
finish
f
finish
info arhs
info args
p t
c
info args
c
ifno args
info args
c
info args
info line
p t
p t
bt
p t
p t->string()
p m_from
p m_from->string()
p types
p called_types
bt
info args
p m_matcher
finish
c
finish
r
c
p m_matcher
p type_
c
p type_
p m_matcher
c
r
c
bt
c
r
c
p t
p m_from
p *m_from
r
run build/test/unit_types
info files
info source
info sources
p loc
p e
bt
p ident
p spec
p *spec
m
n
p type_
p *type_
p type_->string()
p m_matcher->string()
p string()
s
n
l
n
p m_converter
p m_converter->string()
p string()
finish
n
p string()
p type_
info vtbl type_
frame
finish
bt
c
c
c
p type_
p *type_
p t
p m_from
p m_modifier
p m_modifier->string()
p string()
info args
p t->string()
p e
p op
n
p op
bt
p id
p args
n
r
p ast->m_functions
p builtin_opeators
p builtin_operators
finish
n
p parameters
p parameters.args
p parameters->args
p parameters.front().type
p parameters.front().type->string()
p argument_expressions 
p argument_expressions.front() 
p *argument_expressions.front() 
n
r
n
n
p rvaluearg_nonconstlvalue 
n
info locals
c
n
p type_matcher
p type_matcher::registers
info locals
info os
info selectors
info record
f
info symbol
info signals
info probes
info program
info stack
info registers
p m_source_code 
p m_source_code.get_filename 
p m_source_code.get_filename()
n
p line
p column
p left
p error
p right
p right_before
n
p right_after
p left
p right
p left
p top_left
p parent
p *this
